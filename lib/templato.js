// Generated by CoffeeScript 1.3.3
var Templato, TemplatoEJS, TemplatoEco, TemplatoJade, TemplatoMustache;

if (typeof module !== "undefined" && module !== null) {
  TemplatoEJS = require('./engines/ejs');
  TemplatoEco = require('./engines/eco');
  TemplatoMustache = require('./engines/mustache');
  TemplatoJade = require('./engines/jade');
}

Templato = (function() {

  Templato.registerHelper = function(name, helper) {
    if (!this.helpers) {
      this.helpers = {};
    }
    return this.helpers[name] = helper;
  };

  Templato.detectEngine = function(extension) {
    switch (extension) {
      case 'ejs':
        return 'ejs';
      case 'eco':
        return 'eco';
      case 'mu':
      case 'mustache':
        return 'mustache';
      case 'jade':
        return 'jade';
    }
  };

  function Templato() {
    this.helpers = {};
  }

  Templato.prototype.set = function(options) {
    this.engine = (function() {
      switch (options.engine) {
        case 'ejs':
          return new TemplatoEJS;
        case 'eco':
          return new TemplatoEco;
        case 'mustache':
        case 'mu':
          return new TemplatoMustache;
        case 'jade':
          return new TemplatoJade;
      }
    })();
    if (options.template) {
      this.template = options.template;
      return delete this.fn;
    }
  };

  Templato.prototype.registerHelper = function(name, helper) {
    return this.helpers[name] = helper;
  };

  Templato.prototype.compile = function() {
    if (this.fn) {
      return this.fn;
    }
    return this.fn = this.engine.compile(this.template);
  };

  Templato.prototype.render = function(data) {
    var helper;
    if (data == null) {
      data = {};
    }
    for (helper in this.helpers) {
      data[helper] = this.helpers[helper];
    }
    for (helper in Templato.helpers) {
      data[helper] = Templato.helpers[helper];
    }
    return this.engine.render(this.compile(), data);
  };

  return Templato;

})();

if (typeof module !== "undefined" && module !== null) {
  module.exports = Templato;
}
